import appuifw
import e32
import codecs
import os

def ru(x):
    return x.decode('utf-8')



def ur(x):
    return x.encode('utf-8')


try:
    import coderf
except:
    appuifw.note(ru('\xd0\xbc\xd0\xbe\xd0\xb4\xd1\x83\xd0\xbb\xd1\x8c coderf \xd0\xbe\xd1\x82\xd1\x81\xd1\x83\xd1\x82\xd1\x81\xd1\x82\xd0\xb2\xd1\x83\xd0\xb5\xd1\x82 \xd0\xb4\xd0\xb0\xd0\xbb\xd1\x8c\xd0\xbd\xd0\xb5\xd0\xb9\xd1\x88\xd0\xb0\xd1\x8f \xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0 \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd1\x8b \xd0\xbd\xd0\xb5 \xd0\xb2\xd0\xbe\xd0\xb7\xd0\xbc\xd0\xbe\xd0\xb6\xd0\xbd\xd0\xb0.'), 'error')
cdir = u'e:\\coderdoc\\'
bcdir = (cdir + u'base64\\')
hcdir = (cdir + u'hex\\')
zcdir = (cdir + u'z1x\\')
fzcdir = (cdir + u'fz\\')
if (not os.path.isdir(cdir)):
    os.makedirs(cdir)
    os.makedirs(bcdir)
    os.makedirs(hcdir)
    os.makedirs(zcdir)
    os.makedirs(fzcdir)

def chde():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (hcdir + name)
        hex = t.encode('hex')
        Z = open(new, 'w')
        Z.write(hex)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def chen():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (hcdir + name)
        hex = t.decode('hex')
        Z = open(new, 'w')
        Z.write(hex)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd0\xb7\xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def enbas():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (bcdir + name)
        base64 = t.encode('base64')
        Z = open(new, 'w')
        Z.write(base64)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def debas():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (bcdir + name)
        base64 = t.decode('base64')
        Z = open(new, 'w')
        Z.write(base64)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd0\xb7\xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def enzp():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (zcdir + name)
        zlib = t.encode('zlib')
        Z = open(new, 'w')
        Z.write(zlib)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def dezp():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (zcdir + name)
        zlib = t.decode('zlib')
        Z = open(new, 'w')
        Z.write(zlib)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd0\xb7\xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def enzp2():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (fzcdir + name)
        zlib = t.encode('zlib')
        z2lib = zlib.encode('zlib')
        Z = open(new, 'w')
        Z.write(z2lib)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def dezp2():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        name = appuifw.query(ru('\xd0\xb2\xd0\xb2\xd0\xb5\xd0\xb4\xd0\xb8\xd1\x82\xd0\xb5 \xd0\xb8\xd0\xbc\xd1\x8f:'), 'text')
        new = (fzcdir + name)
        zlib = t.decode('zlib')
        z2lib = zlib.decode('zlib')
        Z = open(new, 'w')
        Z.write(z2lib)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd0\xb7\xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def enzre():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        zlib = t.encode('zlib')
        Z = open(file, 'w')
        Z.write(zlib)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def dezre():
    try:
        file = coderf.manager()
        F = open(file)
        t = F.read()
        F.close()
        zlib = t.decode('zlib')
        Z = open(file, 'w')
        Z.write(zlib)
        Z.close()
        round.set(ru('\xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd1\x80\xd0\xb0\xd0\xb7\xd0\xba\xd0\xbe\xd0\xb4\xd0\xb8\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xbd\xd0\xbe!'))
    except:
        appuifw.note(ru('\xd0\xbe\xd0\xbf\xd0\xb5\xd1\x80\xd0\xb0\xd1\x86\xd0\xb8\xd1\x8f \xd1\x83\xd1\x81\xd0\xbf\xd0\xb5\xd1\x88\xd0\xbd\xd0\xbe \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbb\xd0\xb5\xd0\xbd\xd0\xb0'), 'info')



def exit_key_handler():
    os.abort()



def about():
    round.set(ru('      \xd0\xa8\xd0\x98\xd0\xa4\xd0\xa0\xd0\x9e\xd0\x92\xd0\x90\xd0\x9b\xd0\xac\xd0\xa9\xd0\x98\xd0\x9a\nCoder by [S.M.A.R.T]\xe2\x84\xa2\n\xd0\xb4\xd0\xbb\xd1\x8f www.Dimonvideo.ru\n\xd1\x81\xd0\xbf\xd0\xb0\xd1\x81\xd0\xb8\xd0\xb1\xd0\xbe \xd0\xb7\xd0\xb0 \xd0\xb8\xd1\x81\xd0\xbf\xd0\xbe\xd0\xbb\xd1\x8c\xd0\xb7\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5'))



def help():
    round.set(ru('           \xd0\x9f\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c\n1.) \xd0\xbd\xd0\xb5 \xd0\xbf\xd0\xb8\xd1\x88\xd0\xb8\xd1\x82\xd0\xb5 \xd1\x80\xd1\x83\xd1\x81\xd1\x81\xd0\xba\xd0\xb8\xd0\xb5 \xd0\xb8\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xb0 \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xbe\xd0\xb2 \xd0\xb4\xd0\xbb\xd1\x8f \xd1\x81\xd0\xbe\xd1\x85\xd1\x80\xd0\xb0\xd0\xbd\xd0\xb5\xd0\xbd\xd0\xb8\xd1\x8f.(\xd0\xbd\xd0\xb5 \xd0\xb2\xd0\xb8\xd0\xb6\xd1\x83 \xd1\x81\xd0\xbc\xd1\x8b\xd1\x81\xd0\xbb\xd0\xb0 \xd0\xb4\xd0\xb5\xd0\xbb\xd0\xb0\xd1\x82\xd1\x8c)\n2.) \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd1\x8b \xd1\x81\xd0\xbe\xd1\x85\xd1\x80\xd0\xb0\xd0\xbd\xd1\x8f\xd1\x8e\xd1\x82\xd1\x81\xd1\x8f \xd0\xb2 e:\\coderdoc\\ \n3.) \xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd0\xbd\xd0\xb8\xd0\xb5 \xd1\x81 \xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0 \xd0\xbd\xd0\xb0 \xd0\xb2\xd0\xb0\xd1\x88 \xd1\x81\xd1\x82\xd1\x80\xd0\xb0\xd1\x85 \xd0\xb8 \xd1\x80\xd0\xb8\xd1\x81\xd0\xba. (\xd0\xa3 \xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8f \xd1\x80\xd0\xb0\xd0\xb1\xd0\xbe\xd1\x82\xd0\xb0\xd0\xb5\xd1\x82.)'))


app_lock = e32.Ao_lock()
round = appuifw.Text()
round.set(u'')
appuifw.app.screen = 'normal'
appuifw.app.body = round
appuifw.app.title = ru('\xd0\xa8\xd0\xb8\xd1\x84\xd1\x80\xd0\xb0\xd1\x82\xd0\xbe\xd1\x80')
appuifw.app.menu = [(ru('hex'),
  ((ru('\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c hex'),
    chde),
   (ru('\xd0\xb4\xd0\xb5\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c hex'),
    chen))),
 (ru('base64'),
  ((ru('\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c base64'),
    enbas),
   (ru('\xd0\xb4\xd0\xb5\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c base64'),
    debas))),
 (ru('z1x'),
  ((ru('\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c z1'),
    enzp),
   (ru('\xd0\xb4\xd0\xb5\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c z1'),
    dezp))),
 (ru('fz'),
  ((ru('\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c fz'),
    enzp2),
   (ru('\xd0\xb4\xd0\xb5\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c fz'),
    debas))),
 (ru('\xd1\x81 \xd0\xb7\xd0\xb0\xd0\xbc\xd0\xb5\xd0\xbd\xd0\xbe\xd0\xb9 \xd1\x84\xd0\xb0\xd0\xb9\xd0\xbb\xd0\xb0'),
  ((ru('\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c'),
    enzre),
   (ru('\xd0\xb4\xd0\xb5\xd1\x88\xd0\xb8\xd1\x84\xd1\x80\xd0\xbe\xd0\xb2\xd0\xb0\xd1\x82\xd1\x8c'),
    dezre)))]

def leftm():
    leftm = [ru('\xd0\x9e \xd0\xbf\xd1\x80\xd0\xbe\xd0\xb3\xd1\x80\xd0\xb0\xd0\xbc\xd0\xbc\xd0\xb5'),
     ru('\xd0\x9f\xd0\xbe\xd0\xbc\xd0\xbe\xd1\x89\xd1\x8c'),
     ru('\xd0\x92\xd1\x8b\xd1\x85\xd0\xbe\xd0\xb4')]
    i = appuifw.popup_menu(leftm, ru('\xd0\x94\xd1\x80\xd1\x83\xd0\xb3\xd0\xbe\xd0\xb5 \xd0\xbc\xd0\xb5\xd0\xbd\xd1\x8e'))
    if (i == 0):
        about()
    elif (i == 1):
        help()
    elif (i == 2):
        exit_key_handler()


appuifw.app.exit_key_handler = leftm
app_lock.wait()

